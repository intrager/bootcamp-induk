package com.induk.bootcamp.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.induk.bootcamp.domain.User;

@Repository
public class UserDAOImpl implements UserDAO {
	@Autowired
	DataSource dataSource;
	
	@Override
	public int deleteUser(String id) throws Exception {
		int rowCnt = 0;
		String sql = "DELETE FROM user_info WHERE id=?";
		
		try (	// try~with~resources - since jdk7
			Connection conn = dataSource.getConnection();
			PreparedStatement pstmt = conn.prepareStatement(sql);
		) {
			pstmt.setString(1, id);
			return pstmt.executeUpdate();	// insert, delete, update
		}
	}
	
	@Override
	public User selectUser(String id) throws Exception {
		User user = null;
		String sql = "select * from user_info where id = ?";
		
		try(
			Connection conn = dataSource.getConnection();
				PreparedStatement pstmt = conn.prepareStatement(sql);
				ResultSet resultSet = pstmt.executeQuery();
		) {
			pstmt.setString(1, id);
			
			if(resultSet.next()) {
				user = new User();
				user.setId(resultSet.getString(1));
				user.setPw(resultSet.getString(2));
				user.setName(resultSet.getString(3));
				user.setEmail(resultSet.getString(4));
				user.setBirth(new Date(resultSet.getDate(5).getTime()));
				user.setSns(resultSet.getString(6));
				user.setReg_date(new Date(resultSet.getTimestamp(7).getTime()));
			}
		}
		
		return user;
	}
	
	// 사용자 정보를 user_info 테이블에 저장하는 메서드
	@Override
	public int insertUser(User user) throws Exception {
		int rowCnt = 0;
		String sql = "insert into user_info values (?, ?, ?, ?, ?, ?, now())";
	
		try(
			Connection conn = dataSource.getConnection();
			PreparedStatement pstmt = conn.prepareStatement(sql);	// SQL Injection 공격, 성능향상
		) {
			pstmt.setString(1,  user.getId());
			pstmt.setString(2, user.getPw());
			pstmt.setString(3, user.getName());
			pstmt.setString(4, user.getEmail());
			pstmt.setDate(5, new java.sql.Date(user.getBirth().getTime()));
			pstmt.setString(6, user.getSns());
			
			return pstmt.executeUpdate();
		}
	}
	
	@Override
	public int updateUser(User user) throws Exception {
		int rowCnt = 0;
		
		String sql = "update user_info " +
		"set pw = ?, name = ?, email = ?, birth = ?, sns = ?, reg_date = ?" + 
				"where id = ? ";
		
		try (
			Connection conn = dataSource.getConnection();
			PreparedStatement pstmt = conn.prepareStatement(sql);
		)
	}
}
